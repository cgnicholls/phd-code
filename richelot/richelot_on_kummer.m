// In this file we compute the Richelot isogeny on the Kummer surface.

intrinsic RichelotOnKummer() -> SeqEnum, SeqEnum
    { Computes the Richelot isogeny on the Kummer surface of y^2 = f(x). Assumes
    that f(x) = G1(x) G2(x) G3(x), where Gi = g_i2 * x^2 + g_i1 * x + g_i0. Note
    that we assume that fd(x) is the isogenous curve without using delta. That
    is, use L_i(x) = 1/delta * [G_(i+1), G_(i+2)]. }

    K<g10,g11,g12,g20,g21,g22,g30,g31,g32> := FunctionField(Rationals(), 9);
    Pk<k1,k2,k3,k4> := PolynomialRing(K, 4);

    li := [ (g10^2*g20*g21*g32^2 - g10^2*g20*g22*g31*g32 + g10^2*g21*g22*g30*g32
    - g10^2*g22^2*g30*g31 - g10*g11*g20^2*g32^2 - g10*g11*g20*g22*g31^2 +
    g10*g11*g21^2*g30*g32 + g10*g11*g22^2*g30^2 + g10*g12*g20^2*g31*g32 +
    g10*g12*g20*g21*g31^2 - g10*g12*g21^2*g30*g31 - g10*g12*g21*g22*g30^2 -
    g11^2*g20*g21*g30*g32 + g11^2*g20*g22*g30*g31 - g11*g12*g20^2*g30*g32 +
    g11*g12*g20*g22*g30^2 + g12^2*g20^2*g30*g31 -
    g12^2*g20*g21*g30^2)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 + g11*g22*g30
    + g12*g20*g31 - g12*g21*g30)*k1^2 + (-2*g10*g11*g20*g22*g31*g32 +
    2*g10*g11*g21*g22*g30*g32 + 2*g10*g12*g20*g21*g31*g32 -
    2*g10*g12*g21*g22*g30*g31 - 2*g11*g12*g20*g21*g30*g32 +
    2*g11*g12*g20*g22*g30*g31)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1*k2 + (2*g10*g12*g21^2*g31*g32 -
    2*g10*g12*g21*g22*g31^2 - 2*g11^2*g20*g22*g31*g32 + 2*g11^2*g21*g22*g30*g32
    + 2*g11*g12*g20*g22*g31^2 - 2*g11*g12*g21^2*g30*g32)/(g10*g21*g32 -
    g10*g22*g31 - g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1*k3 +
    k1*k4 + (-g10*g11*g20*g22*g32^2 + g10*g11*g22^2*g30*g32 +
    g10*g12*g20*g21*g32^2 - g10*g12*g22^2*g30*g31 - g12^2*g20*g21*g30*g32 +
    g12^2*g20*g22*g30*g31)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k2^2 + (-g10*g11*g21*g22*g32^2 +
    g10*g11*g22^2*g31*g32 + g10*g12*g21^2*g32^2 - g10*g12*g22^2*g31^2 -
    g11^2*g20*g22*g32^2 + g11^2*g22^2*g30*g32 + g11*g12*g20*g21*g32^2 -
    g11*g12*g22^2*g30*g31 - g12^2*g20*g21*g31*g32 + g12^2*g20*g22*g31^2 -
    g12^2*g21^2*g30*g32 + g12^2*g21*g22*g30*g31)/(g10*g21*g32 - g10*g22*g31 -
    g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k2*k3 +
    (g10*g12*g21*g22*g32^2 - g10*g12*g22^2*g31*g32 - g11^2*g21*g22*g32^2 +
    g11^2*g22^2*g31*g32 - g11*g12*g20*g22*g32^2 + g11*g12*g21^2*g32^2 +
    g11*g12*g22^2*g30*g32 - g11*g12*g22^2*g31^2 + g12^2*g20*g22*g31*g32 -
    g12^2*g21^2*g31*g32 - g12^2*g21*g22*g30*g32 +
    g12^2*g21*g22*g31^2)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 + g11*g22*g30
    + g12*g20*g31 - g12*g21*g30)*k3^2,

    (g10^2*g20*g21*g31*g32 +
    g10^2*g20*g22*g31^2 - g10^2*g21^2*g30*g32 - g10^2*g21*g22*g30*g31 -
    g10*g11*g20^2*g31*g32 + g10*g11*g21*g22*g30^2 - g10*g12*g20^2*g31^2 +
    g10*g12*g21^2*g30^2 + g11^2*g20^2*g30*g32 - g11^2*g20*g22*g30^2 +
    g11*g12*g20^2*g30*g31 - g11*g12*g20*g21*g30^2)/(g10*g21*g32 - g10*g22*g31 -
    g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1^2 +
    (2*g10^2*g20*g21*g32^2 + 2*g10^2*g20*g22*g31*g32 - 2*g10^2*g21*g22*g30*g32 -
    2*g10^2*g22^2*g30*g31 - 2*g10*g11*g20^2*g32^2 + 2*g10*g11*g22^2*g30^2 -
    2*g10*g12*g20^2*g31*g32 + 2*g10*g12*g21*g22*g30^2 + 2*g11*g12*g20^2*g30*g32
    - 2*g11*g12*g20*g22*g30^2 + 2*g12^2*g20^2*g30*g31 -
    2*g12^2*g20*g21*g30^2)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1*k2 + (g10^2*g21^2*g32^2 -
    g10^2*g22^2*g31^2 + 2*g10*g11*g20*g22*g31*g32 - g10*g11*g21^2*g31*g32 -
    2*g10*g11*g21*g22*g30*g32 + g10*g11*g21*g22*g31^2 -
    2*g10*g12*g20*g21*g31*g32 + 2*g10*g12*g21*g22*g30*g31 - g11^2*g20^2*g32^2 +
    g11^2*g20*g21*g31*g32 - g11^2*g21*g22*g30*g31 + g11^2*g22^2*g30^2 +
    2*g11*g12*g20*g21*g30*g32 - g11*g12*g20*g21*g31^2 -
    2*g11*g12*g20*g22*g30*g31 + g11*g12*g21^2*g30*g31 + g12^2*g20^2*g31^2 -
    g12^2*g21^2*g30^2)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 + g11*g22*g30 +
    g12*g20*g31 - g12*g21*g30)*k1*k3 + (2*g10^2*g20*g22*g32^2 -
    2*g10^2*g22^2*g30*g32 - 2*g10*g12*g20^2*g32^2 + 2*g10*g12*g22^2*g30^2 +
    2*g12^2*g20^2*g30*g32 - 2*g12^2*g20*g22*g30^2)/(g10*g21*g32 - g10*g22*g31 -
    g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k2^2 +
    (2*g10^2*g21*g22*g32^2 - 2*g10^2*g22^2*g31*g32 + 2*g10*g11*g20*g22*g32^2 -
    2*g10*g11*g22^2*g30*g32 - 2*g10*g12*g20*g21*g32^2 + 2*g10*g12*g22^2*g30*g31
    - 2*g11*g12*g20^2*g32^2 + 2*g11*g12*g22^2*g30^2 + 2*g12^2*g20^2*g31*g32 +
    2*g12^2*g20*g21*g30*g32 - 2*g12^2*g20*g22*g30*g31 -
    2*g12^2*g21*g22*g30^2)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k2*k3 + k2*k4 +
    (g10*g11*g21*g22*g32^2 - g10*g11*g22^2*g31*g32 - g10*g12*g21^2*g32^2 +
    g10*g12*g22^2*g31^2 + g11^2*g20*g22*g32^2 - g11^2*g22^2*g30*g32 -
    g11*g12*g20*g21*g32^2 + g11*g12*g22^2*g30*g31 + g12^2*g20*g21*g31*g32 -
    g12^2*g20*g22*g31^2 + g12^2*g21^2*g30*g32 -
    g12^2*g21*g22*g30*g31)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k3^2,

    (g10^2*g20*g21*g30*g32 -
    g10^2*g20*g21*g31^2 - g10^2*g20*g22*g30*g31 + g10^2*g21^2*g30*g31 -
    g10*g11*g20^2*g30*g32 + g10*g11*g20^2*g31^2 + g10*g11*g20*g22*g30^2 -
    g10*g11*g21^2*g30^2 + g10*g12*g20^2*g30*g31 - g10*g12*g20*g21*g30^2 -
    g11^2*g20^2*g30*g31 + g11^2*g20*g21*g30^2)/(g10*g21*g32 - g10*g22*g31 -
    g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1^2 +
    (-g10^2*g20*g21*g31*g32 - g10^2*g20*g22*g31^2 + g10^2*g21^2*g30*g32 +
    g10^2*g21*g22*g30*g31 + g10*g11*g20^2*g31*g32 - g10*g11*g21*g22*g30^2 +
    g10*g12*g20^2*g31^2 - g10*g12*g21^2*g30^2 - g11^2*g20^2*g30*g32 +
    g11^2*g20*g22*g30^2 - g11*g12*g20^2*g30*g31 +
    g11*g12*g20*g21*g30^2)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1*k2 + (-2*g10*g11*g20*g22*g31^2 +
    2*g10*g11*g21^2*g30*g32 + 2*g10*g12*g20*g21*g31^2 - 2*g10*g12*g21^2*g30*g31
    - 2*g11^2*g20*g21*g30*g32 + 2*g11^2*g20*g22*g30*g31)/(g10*g21*g32 -
    g10*g22*g31 - g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1*k3 +
    (-g10^2*g20*g22*g31*g32 + g10^2*g21*g22*g30*g32 + g10*g12*g20^2*g31*g32 -
    g10*g12*g21*g22*g30^2 - g11*g12*g20^2*g30*g32 +
    g11*g12*g20*g22*g30^2)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k2^2 + (-2*g10*g11*g20*g22*g31*g32
    + 2*g10*g11*g21*g22*g30*g32 + 2*g10*g12*g20*g21*g31*g32 -
    2*g10*g12*g21*g22*g30*g31 - 2*g11*g12*g20*g21*g30*g32 +
    2*g11*g12*g20*g22*g30*g31)/(g10*g21*g32 - g10*g22*g31 - g11*g20*g32 +
    g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k2*k3 + (g10^2*g21*g22*g32^2 -
    g10^2*g22^2*g31*g32 - g10*g11*g20*g22*g32^2 + g10*g11*g22^2*g30*g32 +
    g10*g12*g20*g21*g32^2 + g10*g12*g21^2*g31*g32 - g10*g12*g21*g22*g31^2 -
    g10*g12*g22^2*g30*g31 - g11^2*g20*g22*g31*g32 + g11^2*g21*g22*g30*g32 -
    g11*g12*g20^2*g32^2 + g11*g12*g20*g22*g31^2 - g11*g12*g21^2*g30*g32 +
    g11*g12*g22^2*g30^2 + g12^2*g20^2*g31*g32 - g12^2*g20*g21*g30*g32 +
    g12^2*g20*g22*g30*g31 - g12^2*g21*g22*g30^2)/(g10*g21*g32 - g10*g22*g31 -
    g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k3^2 + k3*k4,

    (-4*g10^4*g20^2*g21*g22*g31*g32^3 + 4*g10^4*g20^2*g22^2*g31^2*g32^2 -
    g10^4*g20*g21^3*g31*g32^3 + 3*g10^4*g20*g21^2*g22*g31^2*g32^2 -
    3*g10^4*g20*g21*g22^2*g31^3*g32 + g10^4*g20*g22^3*g31^4 +
    g10^4*g21^4*g30*g32^3 - 3*g10^4*g21^3*g22*g30*g31*g32^2 +
    4*g10^4*g21^2*g22^2*g30^2*g32^2 + 3*g10^4*g21^2*g22^2*g30*g31^2*g32 -
    4*g10^4*g21*g22^3*g30^2*g31*g32 - g10^4*g21*g22^3*g30*g31^3 +
    4*g10^3*g11*g20^3*g22*g31*g32^3 + g10^3*g11*g20^2*g21^2*g31*g32^3 -
    2*g10^3*g11*g20^2*g21*g22*g31^2*g32^2 -
    4*g10^3*g11*g20^2*g22^2*g30*g31*g32^2 + 5*g10^3*g11*g20^2*g22^2*g31^3*g32 -
    2*g10^3*g11*g20*g21^3*g30*g32^3 + g10^3*g11*g20*g21^3*g31^2*g32^2 -
    2*g10^3*g11*g20*g21^2*g22*g30*g31*g32^2 -
    4*g10^3*g11*g20*g21*g22^2*g30^2*g32^2 -
    2*g10^3*g11*g20*g21*g22^2*g30*g31^2*g32 - g10^3*g11*g20*g21*g22^2*g31^4 -
    2*g10^3*g11*g20*g22^3*g30*g31^3 - g10^3*g11*g21^4*g30*g31*g32^2 +
    5*g10^3*g11*g21^3*g22*g30^2*g32^2 - 2*g10^3*g11*g21^2*g22^2*g30^2*g31*g32 +
    g10^3*g11*g21^2*g22^2*g30*g31^3 + 4*g10^3*g11*g21*g22^3*g30^3*g32 +
    g10^3*g11*g21*g22^3*g30^2*g31^2 + 4*g10^3*g12*g20^3*g21*g31*g32^3 -
    8*g10^3*g12*g20^3*g22*g31^2*g32^2 - g10^3*g12*g20^2*g21^2*g31^2*g32^2 +
    4*g10^3*g12*g20^2*g21*g22*g30*g31*g32^2 -
    2*g10^3*g12*g20^2*g21*g22*g31^3*g32 - g10^3*g12*g20^2*g22^2*g31^4 +
    4*g10^3*g12*g20*g21^3*g30*g31*g32^2 - 2*g10^3*g12*g20*g21^3*g31^3*g32 +
    2*g10^3*g12*g20*g21^2*g22*g31^4 + 4*g10^3*g12*g20*g21*g22^2*g30^2*g31*g32 +
    4*g10^3*g12*g20*g21*g22^2*g30*g31^3 - g10^3*g12*g21^4*g30^2*g32^2 +
    2*g10^3*g12*g21^4*g30*g31^2*g32 - 2*g10^3*g12*g21^3*g22*g30^2*g31*g32 -
    2*g10^3*g12*g21^3*g22*g30*g31^3 - 8*g10^3*g12*g21^2*g22^2*g30^3*g32 -
    g10^3*g12*g21^2*g22^2*g30^2*g31^2 + 4*g10^3*g12*g21*g22^3*g30^3*g31 +
    g10^2*g11^2*g20^3*g21*g31*g32^3 - g10^2*g11^2*g20^3*g22*g31^2*g32^2 +
    2*g10^2*g11^2*g20^2*g21^2*g30*g32^3 - 2*g10^2*g11^2*g20^2*g21^2*g31^2*g32^2
    + g10^2*g11^2*g20^2*g21*g22*g30*g31*g32^2 +
    2*g10^2*g11^2*g20^2*g21*g22*g31^3*g32 -
    3*g10^2*g11^2*g20^2*g22^2*g30*g31^2*g32 + 2*g10^2*g11^2*g20^2*g22^2*g31^4 +
    g10^2*g11^2*g20*g21^3*g30*g31*g32^2 -
    3*g10^2*g11^2*g20*g21^2*g22*g30^2*g32^2 -
    6*g10^2*g11^2*g20*g21^2*g22*g30*g31^2*g32 +
    g10^2*g11^2*g20*g21*g22^2*g30^2*g31*g32 +
    g10^2*g11^2*g20*g21*g22^2*g30*g31^3 + 2*g10^2*g11^2*g20*g22^3*g30^2*g31^2 +
    2*g10^2*g11^2*g21^4*g30^2*g32^2 + 2*g10^2*g11^2*g21^3*g22*g30^2*g31*g32 -
    g10^2*g11^2*g21^2*g22^2*g30^3*g32 - 2*g10^2*g11^2*g21^2*g22^2*g30^2*g31^2 +
    g10^2*g11^2*g21*g22^3*g30^3*g31 - 4*g10^2*g11*g12*g20^4*g31*g32^3 -
    2*g10^2*g11*g12*g20^3*g21*g31^2*g32^2 +
    4*g10^2*g11*g12*g20^3*g22*g30*g31*g32^2 -
    2*g10^2*g11*g12*g20^3*g22*g31^3*g32 +
    g10^2*g11*g12*g20^2*g21^2*g30*g31*g32^2 +
    2*g10^2*g11*g12*g20^2*g21^2*g31^3*g32 +
    4*g10^2*g11*g12*g20^2*g21*g22*g30*g31^2*g32 -
    6*g10^2*g11*g12*g20^2*g21*g22*g31^4 - g10^2*g11*g12*g20^2*g22^2*g30*g31^3 -
    g10^2*g11*g12*g20*g21^3*g30^2*g32^2 +
    4*g10^2*g11*g12*g20*g21^3*g30*g31^2*g32 +
    4*g10^2*g11*g12*g20*g21^2*g22*g30^2*g31*g32 +
    4*g10^2*g11*g12*g20*g21^2*g22*g30*g31^3 +
    4*g10^2*g11*g12*g20*g21*g22^2*g30^3*g32 +
    g10^2*g11*g12*g20*g21*g22^2*g30^2*g31^2 -
    6*g10^2*g11*g12*g21^4*g30^2*g31*g32 - 2*g10^2*g11*g12*g21^3*g22*g30^3*g32 +
    2*g10^2*g11*g12*g21^3*g22*g30^2*g31^2 -
    2*g10^2*g11*g12*g21^2*g22^2*g30^3*g31 - 4*g10^2*g11*g12*g21*g22^3*g30^4 +
    4*g10^2*g12^2*g20^4*g31^2*g32^2 - 4*g10^2*g12^2*g20^3*g21*g30*g31*g32^2 +
    5*g10^2*g12^2*g20^3*g21*g31^3*g32 - g10^2*g12^2*g20^3*g22*g31^4 -
    3*g10^2*g12^2*g20^2*g21^2*g30*g31^2*g32 + 2*g10^2*g12^2*g20^2*g21^2*g31^4 -
    g10^2*g12^2*g20^2*g21*g22*g30*g31^3 - g10^2*g12^2*g20*g21^3*g30^2*g31*g32 -
    4*g10^2*g12^2*g20*g21^3*g30*g31^3 - 3*g10^2*g12^2*g20*g21^2*g22*g30^2*g31^2
    - 4*g10^2*g12^2*g20*g21*g22^2*g30^3*g31 - g10^2*g12^2*g21^4*g30^3*g32 +
    2*g10^2*g12^2*g21^4*g30^2*g31^2 + 5*g10^2*g12^2*g21^3*g22*g30^3*g31 +
    4*g10^2*g12^2*g21^2*g22^2*g30^4 - g10*g11^3*g20^4*g31*g32^3 -
    2*g10*g11^3*g20^3*g21*g30*g32^3 + g10*g11^3*g20^3*g21*g31^2*g32^2 +
    4*g10*g11^3*g20^3*g22*g30*g31*g32^2 - 2*g10*g11^3*g20^3*g22*g31^3*g32 +
    g10*g11^3*g20^2*g21^2*g30*g31*g32^2 - g10*g11^3*g20^2*g21*g22*g30^2*g32^2 +
    4*g10*g11^3*g20^2*g21*g22*g30*g31^2*g32 -
    g10*g11^3*g20^2*g22^2*g30^2*g31*g32 - 4*g10*g11^3*g20^2*g22^2*g30*g31^3 -
    4*g10*g11^3*g20*g21^3*g30^2*g32^2 + 4*g10*g11^3*g20*g21^2*g22*g30^2*g31*g32
    + 4*g10*g11^3*g20*g21*g22^2*g30^3*g32 + g10*g11^3*g20*g21*g22^2*g30^2*g31^2
    - 2*g10*g11^3*g20*g22^3*g30^3*g31 - 2*g10*g11^3*g21^3*g22*g30^3*g32 +
    g10*g11^3*g21^2*g22^2*g30^3*g31 - g10*g11^3*g21*g22^3*g30^4 +
    3*g10*g11^2*g12*g20^4*g31^2*g32^2 - 2*g10*g11^2*g12*g20^3*g21*g30*g31*g32^2
    + 2*g10*g11^2*g12*g20^3*g22*g31^4 - 3*g10*g11^2*g12*g20^2*g21^2*g30^2*g32^2
    - 6*g10*g11^2*g12*g20^2*g21^2*g30*g31^2*g32 +
    4*g10*g11^2*g12*g20^2*g21*g22*g30^2*g31*g32 +
    4*g10*g11^2*g12*g20^2*g21*g22*g30*g31^3 -
    3*g10*g11^2*g12*g20^2*g22^2*g30^2*g31^2 +
    4*g10*g11^2*g12*g20*g21^3*g30^2*g31*g32 -
    6*g10*g11^2*g12*g20*g21^2*g22*g30^2*g31^2 -
    2*g10*g11^2*g12*g20*g21*g22^2*g30^3*g31 + 2*g10*g11^2*g12*g21^4*g30^3*g32 +
    3*g10*g11^2*g12*g21^2*g22^2*g30^4 - 3*g10*g11*g12^2*g20^4*g31^3*g32 -
    4*g10*g11*g12^2*g20^3*g21*g30^2*g32^2 -
    2*g10*g11*g12^2*g20^3*g21*g30*g31^2*g32 - g10*g11*g12^2*g20^3*g21*g31^4 +
    4*g10*g11*g12^2*g20^3*g22*g30^2*g31*g32 +
    4*g10*g11*g12^2*g20^3*g22*g30*g31^3 +
    g10*g11*g12^2*g20^2*g21^2*g30^2*g31*g32 +
    g10*g11*g12^2*g20^2*g21^2*g30*g31^3 +
    4*g10*g11*g12^2*g20^2*g21*g22*g30^3*g32 +
    g10*g11*g12^2*g20^2*g21*g22*g30^2*g31^2 -
    4*g10*g11*g12^2*g20^2*g22^2*g30^3*g31 + 4*g10*g11*g12^2*g20*g21^3*g30^3*g32
    + g10*g11*g12^2*g20*g21^3*g30^2*g31^2 -
    2*g10*g11*g12^2*g20*g21^2*g22*g30^3*g31 - g10*g11*g12^2*g21^4*g30^3*g31 -
    3*g10*g11*g12^2*g21^3*g22*g30^4 + g10*g12^3*g20^4*g31^4 -
    2*g10*g12^3*g20^3*g21*g30*g31^3 + 2*g10*g12^3*g20^2*g21^2*g30^2*g31^2 -
    2*g10*g12^3*g20*g21^3*g30^3*g31 + g10*g12^3*g21^4*g30^4 +
    g11^4*g20^4*g30*g32^3 - g11^4*g20^3*g21*g30*g31*g32^2 -
    g11^4*g20^3*g22*g30^2*g32^2 + 2*g11^4*g20^3*g22*g30*g31^2*g32 +
    2*g11^4*g20^2*g21^2*g30^2*g32^2 - 6*g11^4*g20^2*g21*g22*g30^2*g31*g32 -
    g11^4*g20^2*g22^2*g30^3*g32 + 2*g11^4*g20^2*g22^2*g30^2*g31^2 +
    2*g11^4*g20*g21^2*g22*g30^3*g32 - g11^4*g20*g21*g22^2*g30^3*g31 +
    g11^4*g20*g22^3*g30^4 - 3*g11^3*g12*g20^4*g30*g31*g32^2 +
    5*g11^3*g12*g20^3*g21*g30^2*g32^2 - 2*g11^3*g12*g20^3*g22*g30^2*g31*g32 -
    2*g11^3*g12*g20^3*g22*g30*g31^3 + 2*g11^3*g12*g20^2*g21^2*g30^2*g31*g32 -
    2*g11^3*g12*g20^2*g21*g22*g30^3*g32 + 2*g11^3*g12*g20^2*g21*g22*g30^2*g31^2
    + 5*g11^3*g12*g20^2*g22^2*g30^3*g31 - 2*g11^3*g12*g20*g21^3*g30^3*g32 -
    3*g11^3*g12*g20*g21*g22^2*g30^4 + 4*g11^2*g12^2*g20^4*g30^2*g32^2 +
    3*g11^2*g12^2*g20^4*g30*g31^2*g32 - 2*g11^2*g12^2*g20^3*g21*g30^2*g31*g32 +
    g11^2*g12^2*g20^3*g21*g30*g31^3 - 8*g11^2*g12^2*g20^3*g22*g30^3*g32 -
    g11^2*g12^2*g20^3*g22*g30^2*g31^2 - g11^2*g12^2*g20^2*g21^2*g30^3*g32 -
    2*g11^2*g12^2*g20^2*g21^2*g30^2*g31^2 -
    2*g11^2*g12^2*g20^2*g21*g22*g30^3*g31 + 4*g11^2*g12^2*g20^2*g22^2*g30^4 +
    g11^2*g12^2*g20*g21^3*g30^3*g31 + 3*g11^2*g12^2*g20*g21^2*g22*g30^4 -
    4*g11*g12^3*g20^4*g30^2*g31*g32 - g11*g12^3*g20^4*g30*g31^3 +
    4*g11*g12^3*g20^3*g21*g30^3*g32 + g11*g12^3*g20^3*g21*g30^2*g31^2 +
    4*g11*g12^3*g20^3*g22*g30^3*g31 + g11*g12^3*g20^2*g21^2*g30^3*g31 -
    4*g11*g12^3*g20^2*g21*g22*g30^4 -
    g11*g12^3*g20*g21^3*g30^4)/(g10^2*g21^2*g32^2 - 2*g10^2*g21*g22*g31*g32 +
    g10^2*g22^2*g31^2 - 2*g10*g11*g20*g21*g32^2 + 2*g10*g11*g20*g22*g31*g32 +
    2*g10*g11*g21*g22*g30*g32 - 2*g10*g11*g22^2*g30*g31 +
    2*g10*g12*g20*g21*g31*g32 - 2*g10*g12*g20*g22*g31^2 -
    2*g10*g12*g21^2*g30*g32 + 2*g10*g12*g21*g22*g30*g31 + g11^2*g20^2*g32^2 -
    2*g11^2*g20*g22*g30*g32 + g11^2*g22^2*g30^2 - 2*g11*g12*g20^2*g31*g32 +
    2*g11*g12*g20*g21*g30*g32 + 2*g11*g12*g20*g22*g30*g31 -
    2*g11*g12*g21*g22*g30^2 + g12^2*g20^2*g31^2 - 2*g12^2*g20*g21*g30*g31 +
    g12^2*g21^2*g30^2)*k1^2 + (8*g10^3*g11*g20^2*g22^2*g31^2*g32^2 -
    4*g10^3*g11*g20*g21^2*g22*g30*g32^3 + 4*g10^3*g11*g20*g21^2*g22*g31^2*g32^2
    - 8*g10^3*g11*g20*g21*g22^2*g30*g31*g32^2 -
    4*g10^3*g11*g20*g21*g22^2*g31^3*g32 - 4*g10^3*g11*g20*g22^3*g30*g31^2*g32 -
    4*g10^3*g11*g21^3*g22*g30*g31*g32^2 + 8*g10^3*g11*g21^2*g22^2*g30^2*g32^2 +
    4*g10^3*g11*g21^2*g22^2*g30*g31^2*g32 -
    8*g10^3*g12*g20^2*g21*g22*g31^2*g32^2 - 2*g10^3*g12*g20*g21^3*g31^2*g32^2 +
    8*g10^3*g12*g20*g21^2*g22*g30*g31*g32^2 +
    8*g10^3*g12*g20*g21*g22^2*g30*g31^2*g32 + 2*g10^3*g12*g20*g21*g22^2*g31^4 +
    2*g10^3*g12*g21^4*g30*g31*g32^2 - 8*g10^3*g12*g21^2*g22^2*g30^2*g31*g32 -
    2*g10^3*g12*g21^2*g22^2*g30*g31^3 + 4*g10^2*g11^2*g20^2*g21*g22*g30*g32^3 -
    2*g10^2*g11^2*g20^2*g21*g22*g31^2*g32^2 -
    4*g10^2*g11^2*g20^2*g22^2*g30*g31*g32^2 +
    6*g10^2*g11^2*g20^2*g22^2*g31^3*g32 -
    4*g10^2*g11^2*g20*g21^2*g22*g30*g31*g32^2 -
    4*g10^2*g11^2*g20*g21*g22^2*g30^2*g32^2 -
    4*g10^2*g11^2*g20*g21*g22^2*g30*g31^2*g32 +
    4*g10^2*g11^2*g20*g22^3*g30^2*g31*g32 + 6*g10^2*g11^2*g21^3*g22*g30^2*g32^2
    - 2*g10^2*g11^2*g21^2*g22^2*g30^2*g31*g32 -
    8*g10^2*g11*g12*g20^3*g22*g31^2*g32^2 +
    4*g10^2*g11*g12*g20^2*g21^2*g30*g32^3 -
    2*g10^2*g11*g12*g20^2*g21^2*g31^2*g32^2 +
    8*g10^2*g11*g12*g20^2*g21*g22*g30*g31*g32^2 -
    4*g10^2*g11*g12*g20^2*g21*g22*g31^3*g32 -
    4*g10^2*g11*g12*g20^2*g22^2*g30*g31^2*g32 -
    2*g10^2*g11*g12*g20^2*g22^2*g31^4 + 6*g10^2*g11*g12*g20*g21^3*g30*g31*g32^2
    - 4*g10^2*g11*g12*g20*g21^2*g22*g30^2*g32^2 +
    4*g10^2*g11*g12*g20*g21^2*g22*g30*g31^2*g32 +
    8*g10^2*g11*g12*g20*g21*g22^2*g30^2*g31*g32 +
    6*g10^2*g11*g12*g20*g21*g22^2*g30*g31^3 +
    4*g10^2*g11*g12*g20*g22^3*g30^2*g31^2 - 2*g10^2*g11*g12*g21^4*g30^2*g32^2 -
    4*g10^2*g11*g12*g21^3*g22*g30^2*g31*g32 -
    8*g10^2*g11*g12*g21^2*g22^2*g30^3*g32 -
    2*g10^2*g11*g12*g21^2*g22^2*g30^2*g31^2 +
    8*g10^2*g12^2*g20^3*g21*g31^2*g32^2 -
    4*g10^2*g12^2*g20^2*g21^2*g30*g31*g32^2 +
    6*g10^2*g12^2*g20^2*g21^2*g31^3*g32 -
    4*g10^2*g12^2*g20^2*g21*g22*g30*g31^2*g32 -
    2*g10^2*g12^2*g20^2*g21*g22*g31^4 - 4*g10^2*g12^2*g20*g21^3*g30*g31^2*g32 -
    4*g10^2*g12^2*g20*g21^2*g22*g30^2*g31*g32 -
    4*g10^2*g12^2*g20*g21^2*g22*g30*g31^3 -
    4*g10^2*g12^2*g20*g21*g22^2*g30^2*g31^2 - 2*g10^2*g12^2*g21^4*g30^2*g31*g32
    + 6*g10^2*g12^2*g21^3*g22*g30^2*g31^2 + 8*g10^2*g12^2*g21^2*g22^2*g30^3*g31
    - 2*g10*g11^3*g20^3*g22*g31^2*g32^2 +
    6*g10*g11^3*g20^2*g21*g22*g30*g31*g32^2 -
    4*g10*g11^3*g20^2*g22^2*g30*g31^2*g32 -
    4*g10*g11^3*g20*g21^2*g22*g30^2*g32^2 +
    6*g10*g11^3*g20*g21*g22^2*g30^2*g31*g32 - 2*g10*g11^3*g21^2*g22^2*g30^3*g32
    - 4*g10*g11^2*g12*g20^3*g21*g30*g32^3 +
    4*g10*g11^2*g12*g20^3*g21*g31^2*g32^2 +
    8*g10*g11^2*g12*g20^3*g22*g30*g31*g32^2 -
    4*g10*g11^2*g12*g20^2*g21^2*g30*g31*g32^2 -
    4*g10*g11^2*g12*g20^2*g21*g22*g30^2*g32^2 +
    4*g10*g11^2*g12*g20^2*g21*g22*g30*g31^2*g32 -
    4*g10*g11^2*g12*g20^2*g22^2*g30^2*g31*g32 -
    4*g10*g11^2*g12*g20^2*g22^2*g30*g31^3 -
    4*g10*g11^2*g12*g20*g21^3*g30^2*g32^2 +
    4*g10*g11^2*g12*g20*g21^2*g22*g30^2*g31*g32 +
    8*g10*g11^2*g12*g20*g21*g22^2*g30^3*g32 -
    4*g10*g11^2*g12*g20*g21*g22^2*g30^2*g31^2 -
    4*g10*g11^2*g12*g20*g22^3*g30^3*g31 + 4*g10*g11^2*g12*g21^2*g22^2*g30^3*g31
    - 8*g10*g11*g12^2*g20^3*g21*g30*g31*g32^2 -
    4*g10*g11*g12^2*g20^3*g21*g31^3*g32 +
    8*g10*g11*g12^2*g20^3*g22*g30*g31^2*g32 + 2*g10*g11*g12^2*g20^3*g22*g31^4 -
    4*g10*g11*g12^2*g20^2*g21^2*g30^2*g32^2 -
    4*g10*g11*g12^2*g20^2*g21^2*g30*g31^2*g32 +
    8*g10*g11*g12^2*g20^2*g21*g22*g30^2*g31*g32 +
    6*g10*g11*g12^2*g20^2*g21*g22*g30*g31^3 -
    4*g10*g11*g12^2*g20^2*g22^2*g30^2*g31^2 +
    6*g10*g11*g12^2*g20*g21^3*g30^2*g31*g32 +
    8*g10*g11*g12^2*g20*g21^2*g22*g30^3*g32 -
    4*g10*g11*g12^2*g20*g21^2*g22*g30^2*g31^2 -
    8*g10*g11*g12^2*g20*g21*g22^2*g30^3*g31 + 2*g10*g11*g12^2*g21^4*g30^3*g32 -
    4*g10*g11*g12^2*g21^3*g22*g30^3*g31 - 4*g10*g12^3*g20^3*g21*g30*g31^2*g32 +
    4*g10*g12^3*g20^2*g21^2*g30^2*g31*g32 +
    4*g10*g12^3*g20^2*g21*g22*g30^2*g31^2 - 4*g10*g12^3*g20*g21^2*g22*g30^3*g31
    + 2*g11^4*g20^3*g22*g30*g31*g32^2 - 2*g11^4*g20^2*g21*g22*g30^2*g32^2 -
    2*g11^4*g20^2*g22^2*g30^2*g31*g32 + 2*g11^4*g20*g21*g22^2*g30^3*g32 -
    4*g11^3*g12*g20^3*g21*g30*g31*g32^2 + 6*g11^3*g12*g20^2*g21^2*g30^2*g32^2 -
    4*g11^3*g12*g20^2*g21*g22*g30^2*g31*g32 +
    6*g11^3*g12*g20^2*g22^2*g30^2*g31^2 - 4*g11^3*g12*g20*g21*g22^2*g30^3*g31 +
    8*g11^2*g12^2*g20^3*g21*g30^2*g32^2 + 4*g11^2*g12^2*g20^3*g21*g30*g31^2*g32
    - 8*g11^2*g12^2*g20^3*g22*g30^2*g31*g32 - 2*g11^2*g12^2*g20^3*g22*g30*g31^3
    - 2*g11^2*g12^2*g20^2*g21^2*g30^2*g31*g32 -
    8*g11^2*g12^2*g20^2*g21*g22*g30^3*g32 -
    2*g11^2*g12^2*g20^2*g21*g22*g30^2*g31^2 +
    8*g11^2*g12^2*g20^2*g22^2*g30^3*g31 - 2*g11^2*g12^2*g20*g21^3*g30^3*g32 +
    4*g11^2*g12^2*g20*g21^2*g22*g30^3*g31)/(g10^2*g21^2*g32^2 -
    2*g10^2*g21*g22*g31*g32 + g10^2*g22^2*g31^2 - 2*g10*g11*g20*g21*g32^2 +
    2*g10*g11*g20*g22*g31*g32 + 2*g10*g11*g21*g22*g30*g32 -
    2*g10*g11*g22^2*g30*g31 + 2*g10*g12*g20*g21*g31*g32 -
    2*g10*g12*g20*g22*g31^2 - 2*g10*g12*g21^2*g30*g32 +
    2*g10*g12*g21*g22*g30*g31 + g11^2*g20^2*g32^2 - 2*g11^2*g20*g22*g30*g32 +
    g11^2*g22^2*g30^2 - 2*g11*g12*g20^2*g31*g32 + 2*g11*g12*g20*g21*g30*g32 +
    2*g11*g12*g20*g22*g30*g31 - 2*g11*g12*g21*g22*g30^2 + g12^2*g20^2*g31^2 -
    2*g12^2*g20*g21*g30*g31 + g12^2*g21^2*g30^2)*k1*k2 +
    (-2*g10^3*g11*g20*g21^2*g22*g31*g32^3 + 2*g10^3*g11*g20*g22^3*g31^3*g32 +
    2*g10^3*g11*g21^3*g22*g30*g32^3 - 2*g10^3*g11*g21*g22^3*g30*g31^2*g32 +
    2*g10^3*g12*g20*g21^3*g31*g32^3 + 8*g10^3*g12*g20*g21^2*g22*g30*g32^3 -
    12*g10^3*g12*g20*g21^2*g22*g31^2*g32^2 -
    16*g10^3*g12*g20*g21*g22^2*g30*g31*g32^2 +
    14*g10^3*g12*g20*g21*g22^2*g31^3*g32 + 8*g10^3*g12*g20*g22^3*g30*g31^2*g32 -
    4*g10^3*g12*g20*g22^3*g31^4 - 4*g10^3*g12*g21^4*g30*g32^3 +
    14*g10^3*g12*g21^3*g22*g30*g31*g32^2 -
    12*g10^3*g12*g21^2*g22^2*g30*g31^2*g32 + 2*g10^3*g12*g21*g22^3*g30*g31^3 +
    12*g10^2*g11^2*g20^2*g22^2*g31^2*g32^2 -
    12*g10^2*g11^2*g20*g21^2*g22*g30*g32^3 +
    6*g10^2*g11^2*g20*g21^2*g22*g31^2*g32^2 -
    6*g10^2*g11^2*g20*g21*g22^2*g31^3*g32 -
    12*g10^2*g11^2*g20*g22^3*g30*g31^2*g32 -
    6*g10^2*g11^2*g21^3*g22*g30*g31*g32^2 +
    12*g10^2*g11^2*g21^2*g22^2*g30^2*g32^2 +
    6*g10^2*g11^2*g21^2*g22^2*g30*g31^2*g32 -
    16*g10^2*g11*g12*g20^2*g21*g22*g30*g32^3 +
    16*g10^2*g11*g12*g20^2*g22^2*g30*g31*g32^2 -
    16*g10^2*g11*g12*g20^2*g22^2*g31^3*g32 +
    14*g10^2*g11*g12*g20*g21^3*g30*g32^3 - 6*g10^2*g11*g12*g20*g21^3*g31^2*g32^2
    + 2*g10^2*g11*g12*g20*g21^2*g22*g30*g31*g32^2 -
    2*g10^2*g11*g12*g20*g21^2*g22*g31^3*g32 +
    16*g10^2*g11*g12*g20*g21*g22^2*g30^2*g32^2 +
    2*g10^2*g11*g12*g20*g21*g22^2*g30*g31^2*g32 +
    8*g10^2*g11*g12*g20*g21*g22^2*g31^4 -
    16*g10^2*g11*g12*g20*g22^3*g30^2*g31*g32 +
    14*g10^2*g11*g12*g20*g22^3*g30*g31^3 + 8*g10^2*g11*g12*g21^4*g30*g31*g32^2 -
    16*g10^2*g11*g12*g21^3*g22*g30^2*g32^2 -
    2*g10^2*g11*g12*g21^3*g22*g30*g31^2*g32 -
    6*g10^2*g11*g12*g21^2*g22^2*g30*g31^3 +
    12*g10^2*g12^2*g20^2*g21^2*g31^2*g32^2 +
    16*g10^2*g12^2*g20^2*g21*g22*g30*g31*g32^2 -
    16*g10^2*g12^2*g20^2*g21*g22*g31^3*g32 -
    16*g10^2*g12^2*g20^2*g22^2*g30*g31^2*g32 + 8*g10^2*g12^2*g20^2*g22^2*g31^4 -
    16*g10^2*g12^2*g20*g21^3*g30*g31*g32^2 + 8*g10^2*g12^2*g20*g21^3*g31^3*g32 -
    16*g10^2*g12^2*g20*g21^2*g22*g30^2*g32^2 +
    24*g10^2*g12^2*g20*g21^2*g22*g30*g31^2*g32 -
    8*g10^2*g12^2*g20*g21^2*g22*g31^4 +
    16*g10^2*g12^2*g20*g21*g22^2*g30^2*g31*g32 -
    16*g10^2*g12^2*g20*g21*g22^2*g30*g31^3 + 8*g10^2*g12^2*g21^4*g30^2*g32^2 -
    8*g10^2*g12^2*g21^4*g30*g31^2*g32 - 16*g10^2*g12^2*g21^3*g22*g30^2*g31*g32 +
    8*g10^2*g12^2*g21^3*g22*g30*g31^3 + 12*g10^2*g12^2*g21^2*g22^2*g30^2*g31^2 +
    2*g10*g11^3*g20^3*g22*g31*g32^3 + 14*g10*g11^3*g20^2*g21*g22*g30*g32^3 -
    6*g10*g11^3*g20^2*g21*g22*g31^2*g32^2 -
    16*g10*g11^3*g20^2*g22^2*g30*g31*g32^2 + 8*g10*g11^3*g20^2*g22^2*g31^3*g32 -
    2*g10*g11^3*g20*g21^2*g22*g30*g31*g32^2 -
    16*g10*g11^3*g20*g21*g22^2*g30^2*g32^2 -
    2*g10*g11^3*g20*g21*g22^2*g30*g31^2*g32 +
    14*g10*g11^3*g20*g22^3*g30^2*g31*g32 + 8*g10*g11^3*g21^3*g22*g30^2*g32^2 -
    6*g10*g11^3*g21^2*g22^2*g30^2*g31*g32 + 2*g10*g11^3*g21*g22^3*g30^3*g32 -
    2*g10*g11^2*g12*g20^3*g21*g31*g32^3 + 8*g10*g11^2*g12*g20^3*g22*g30*g32^3 -
    12*g10*g11^2*g12*g20^3*g22*g31^2*g32^2 -
    12*g10*g11^2*g12*g20^2*g21^2*g30*g32^3 +
    6*g10*g11^2*g12*g20^2*g21^2*g31^2*g32^2 +
    2*g10*g11^2*g12*g20^2*g21*g22*g30*g31*g32^2 -
    2*g10*g11^2*g12*g20^2*g21*g22*g31^3*g32 -
    16*g10*g11^2*g12*g20^2*g22^2*g30^2*g32^2 +
    24*g10*g11^2*g12*g20^2*g22^2*g30*g31^2*g32 -
    8*g10*g11^2*g12*g20^2*g22^2*g31^4 - 2*g10*g11^2*g12*g20*g21^3*g30*g31*g32^2
    + 24*g10*g11^2*g12*g20*g21^2*g22*g30^2*g32^2 +
    12*g10*g11^2*g12*g20*g21^2*g22*g30*g31^2*g32 +
    2*g10*g11^2*g12*g20*g21*g22^2*g30^2*g31*g32 -
    2*g10*g11^2*g12*g20*g21*g22^2*g30*g31^3 +
    8*g10*g11^2*g12*g20*g22^3*g30^3*g32 - 12*g10*g11^2*g12*g20*g22^3*g30^2*g31^2
    - 8*g10*g11^2*g12*g21^4*g30^2*g32^2 -
    2*g10*g11^2*g12*g21^3*g22*g30^2*g31*g32 -
    12*g10*g11^2*g12*g21^2*g22^2*g30^3*g32 +
    6*g10*g11^2*g12*g21^2*g22^2*g30^2*g31^2 -
    2*g10*g11^2*g12*g21*g22^3*g30^3*g31 -
    16*g10*g11*g12^2*g20^3*g22*g30*g31*g32^2 +
    14*g10*g11*g12^2*g20^3*g22*g31^3*g32 - 6*g10*g11*g12^2*g20^2*g21^2*g31^3*g32
    + 16*g10*g11*g12^2*g20^2*g21*g22*g30^2*g32^2 +
    2*g10*g11*g12^2*g20^2*g21*g22*g30*g31^2*g32 +
    8*g10*g11*g12^2*g20^2*g21*g22*g31^4 +
    16*g10*g11*g12^2*g20^2*g22^2*g30^2*g31*g32 -
    16*g10*g11*g12^2*g20^2*g22^2*g30*g31^3 -
    16*g10*g11*g12^2*g20*g21^3*g30^2*g32^2 -
    2*g10*g11*g12^2*g20*g21^3*g30*g31^2*g32 +
    2*g10*g11*g12^2*g20*g21^2*g22*g30^2*g31*g32 -
    2*g10*g11*g12^2*g20*g21^2*g22*g30*g31^3 -
    16*g10*g11*g12^2*g20*g21*g22^2*g30^3*g32 +
    8*g10*g11*g12^2*g21^4*g30^2*g31*g32 + 14*g10*g11*g12^2*g21^3*g22*g30^3*g32 -
    6*g10*g11*g12^2*g21^3*g22*g30^2*g31^2 + 2*g10*g12^3*g20^3*g21*g31^3*g32 +
    8*g10*g12^3*g20^3*g22*g30*g31^2*g32 - 4*g10*g12^3*g20^3*g22*g31^4 -
    12*g10*g12^3*g20^2*g21^2*g30*g31^2*g32 -
    16*g10*g12^3*g20^2*g21*g22*g30^2*g31*g32 +
    14*g10*g12^3*g20^2*g21*g22*g30*g31^3 + 14*g10*g12^3*g20*g21^3*g30^2*g31*g32
    + 8*g10*g12^3*g20*g21^2*g22*g30^3*g32 -
    12*g10*g12^3*g20*g21^2*g22*g30^2*g31^2 - 4*g10*g12^3*g21^4*g30^3*g32 +
    2*g10*g12^3*g21^3*g22*g30^3*g31 - 4*g11^4*g20^3*g22*g30*g32^3 +
    8*g11^4*g20^2*g21*g22*g30*g31*g32^2 + 8*g11^4*g20^2*g22^2*g30^2*g32^2 -
    8*g11^4*g20^2*g22^2*g30*g31^2*g32 - 8*g11^4*g20*g21^2*g22*g30^2*g32^2 +
    8*g11^4*g20*g21*g22^2*g30^2*g31*g32 - 4*g11^4*g20*g22^3*g30^3*g32 +
    2*g11^3*g12*g20^3*g21*g30*g32^3 + 14*g11^3*g12*g20^3*g22*g30*g31*g32^2 -
    6*g11^3*g12*g20^2*g21^2*g30*g31*g32^2 -
    16*g11^3*g12*g20^2*g21*g22*g30^2*g32^2 -
    2*g11^3*g12*g20^2*g21*g22*g30*g31^2*g32 -
    16*g11^3*g12*g20^2*g22^2*g30^2*g31*g32 + 8*g11^3*g12*g20^2*g22^2*g30*g31^3 +
    8*g11^3*g12*g20*g21^3*g30^2*g32^2 - 2*g11^3*g12*g20*g21^2*g22*g30^2*g31*g32
    + 14*g11^3*g12*g20*g21*g22^2*g30^3*g32 -
    6*g11^3*g12*g20*g21*g22^2*g30^2*g31^2 + 2*g11^3*g12*g20*g22^3*g30^3*g31 -
    12*g11^2*g12^2*g20^3*g22*g30*g31^2*g32 +
    12*g11^2*g12^2*g20^2*g21^2*g30^2*g32^2 +
    6*g11^2*g12^2*g20^2*g21^2*g30*g31^2*g32 -
    6*g11^2*g12^2*g20^2*g21*g22*g30*g31^3 +
    12*g11^2*g12^2*g20^2*g22^2*g30^2*g31^2 -
    6*g11^2*g12^2*g20*g21^3*g30^2*g31*g32 -
    12*g11^2*g12^2*g20*g21^2*g22*g30^3*g32 +
    6*g11^2*g12^2*g20*g21^2*g22*g30^2*g31^2 -
    2*g11*g12^3*g20^3*g21*g30*g31^2*g32 + 2*g11*g12^3*g20^3*g22*g30*g31^3 +
    2*g11*g12^3*g20*g21^3*g30^3*g32 -
    2*g11*g12^3*g20*g21^2*g22*g30^3*g31)/(g10^2*g21^2*g32^2 -
    2*g10^2*g21*g22*g31*g32 + g10^2*g22^2*g31^2 - 2*g10*g11*g20*g21*g32^2 +
    2*g10*g11*g20*g22*g31*g32 + 2*g10*g11*g21*g22*g30*g32 -
    2*g10*g11*g22^2*g30*g31 + 2*g10*g12*g20*g21*g31*g32 -
    2*g10*g12*g20*g22*g31^2 - 2*g10*g12*g21^2*g30*g32 +
    2*g10*g12*g21*g22*g30*g31 + g11^2*g20^2*g32^2 - 2*g11^2*g20*g22*g30*g32 +
    g11^2*g22^2*g30^2 - 2*g11*g12*g20^2*g31*g32 + 2*g11*g12*g20*g21*g30*g32 +
    2*g11*g12*g20*g22*g30*g31 - 2*g11*g12*g21*g22*g30^2 + g12^2*g20^2*g31^2 -
    2*g12^2*g20*g21*g30*g31 + g12^2*g21^2*g30^2)*k1*k3 +
    (-4*g10^2*g20*g22*g31*g32 + 4*g10^2*g21*g22*g30*g32 -
    2*g10*g11*g20*g22*g31^2 + 2*g10*g11*g21^2*g30*g32 + 4*g10*g12*g20^2*g31*g32
    + 2*g10*g12*g20*g21*g31^2 - 2*g10*g12*g21^2*g30*g31 -
    4*g10*g12*g21*g22*g30^2 - 2*g11^2*g20*g21*g30*g32 + 2*g11^2*g20*g22*g30*g31
    - 4*g11*g12*g20^2*g30*g32 + 4*g11*g12*g20*g22*g30^2)/(g10*g21*g32 -
    g10*g22*g31 - g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k1*k4 +
    (4*g10^3*g11*g20^2*g22^2*g31*g32^3 + g10^3*g11*g20*g21^2*g22*g31*g32^3 -
    4*g10^3*g11*g20*g21*g22^2*g30*g32^3 - 4*g10^3*g11*g20*g22^3*g30*g31*g32^2 -
    g10^3*g11*g20*g22^3*g31^3*g32 - g10^3*g11*g21^3*g22*g30*g32^3 +
    4*g10^3*g11*g21*g22^3*g30^2*g32^2 + g10^3*g11*g21*g22^3*g30*g31^2*g32 -
    4*g10^3*g12*g20^2*g21*g22*g31*g32^3 - g10^3*g12*g20*g21^3*g31*g32^3 +
    g10^3*g12*g20*g21^2*g22*g31^2*g32^2 +
    8*g10^3*g12*g20*g21*g22^2*g30*g31*g32^2 - g10^3*g12*g20*g21*g22^2*g31^3*g32
    + g10^3*g12*g20*g22^3*g31^4 + g10^3*g12*g21^4*g30*g32^3 -
    g10^3*g12*g21^3*g22*g30*g31*g32^2 + g10^3*g12*g21^2*g22^2*g30*g31^2*g32 -
    4*g10^3*g12*g21*g22^3*g30^2*g31*g32 - g10^3*g12*g21*g22^3*g30*g31^3 +
    2*g10^2*g11^2*g20^2*g22^2*g31^2*g32^2 + g10^2*g11^2*g20*g21^2*g22*g30*g32^3
    - 6*g10^2*g11^2*g20*g21*g22^2*g30*g31*g32^2 +
    g10^2*g11^2*g20*g22^3*g30*g31^2*g32 + 2*g10^2*g11^2*g21^2*g22^2*g30^2*g32^2
    - 4*g10^2*g11*g12*g20^3*g22*g31*g32^3 +
    8*g10^2*g11*g12*g20^2*g21*g22*g30*g32^3 -
    6*g10^2*g11*g12*g20^2*g21*g22*g31^2*g32^2 -
    4*g10^2*g11*g12*g20^2*g22^2*g30*g31*g32^2 +
    2*g10^2*g11*g12*g20^2*g22^2*g31^3*g32 - g10^2*g11*g12*g20*g21^3*g30*g32^3 +
    5*g10^2*g11*g12*g20*g21^2*g22*g30*g31*g32^2 -
    4*g10^2*g11*g12*g20*g21*g22^2*g30^2*g32^2 +
    5*g10^2*g11*g12*g20*g21*g22^2*g30*g31^2*g32 +
    8*g10^2*g11*g12*g20*g22^3*g30^2*g31*g32 - g10^2*g11*g12*g20*g22^3*g30*g31^3
    + 2*g10^2*g11*g12*g21^3*g22*g30^2*g32^2 -
    6*g10^2*g11*g12*g21^2*g22^2*g30^2*g31*g32 -
    4*g10^2*g11*g12*g21*g22^3*g30^3*g32 + 4*g10^2*g12^2*g20^3*g21*g31*g32^3 +
    2*g10^2*g12^2*g20^2*g21^2*g31^2*g32^2 -
    4*g10^2*g12^2*g20^2*g21*g22*g30*g31*g32^2 +
    2*g10^2*g12^2*g20^2*g21*g22*g31^3*g32 - 2*g10^2*g12^2*g20^2*g22^2*g31^4 +
    2*g10^2*g12^2*g20*g21^3*g30*g31*g32^2 -
    8*g10^2*g12^2*g20*g21^2*g22*g30*g31^2*g32 -
    4*g10^2*g12^2*g20*g21*g22^2*g30^2*g31*g32 +
    2*g10^2*g12^2*g20*g21*g22^2*g30*g31^3 - 2*g10^2*g12^2*g21^4*g30^2*g32^2 +
    2*g10^2*g12^2*g21^3*g22*g30^2*g31*g32 +
    2*g10^2*g12^2*g21^2*g22^2*g30^2*g31^2 + 4*g10^2*g12^2*g21*g22^3*g30^3*g31 -
    g10*g11^3*g20^3*g22*g31*g32^3 - g10*g11^3*g20^2*g21*g22*g30*g32^3 +
    2*g10*g11^3*g20^2*g22^2*g30*g31*g32^2 +
    2*g10*g11^3*g20*g21*g22^2*g30^2*g32^2 - g10*g11^3*g20*g22^3*g30^2*g31*g32 -
    g10*g11^3*g21*g22^3*g30^3*g32 + g10*g11^2*g12*g20^3*g21*g31*g32^3 +
    g10*g11^2*g12*g20^3*g22*g31^2*g32^2 + g10*g11^2*g12*g20^2*g21^2*g30*g32^3 +
    5*g10*g11^2*g12*g20^2*g21*g22*g30*g31*g32^2 -
    8*g10*g11^2*g12*g20^2*g22^2*g30*g31^2*g32 -
    8*g10*g11^2*g12*g20*g21^2*g22*g30^2*g32^2 +
    5*g10*g11^2*g12*g20*g21*g22^2*g30^2*g31*g32 +
    g10*g11^2*g12*g20*g22^3*g30^2*g31^2 + g10*g11^2*g12*g21^2*g22^2*g30^3*g32 +
    g10*g11^2*g12*g21*g22^3*g30^3*g31 - 4*g10*g11*g12^2*g20^3*g21*g30*g32^3 +
    8*g10*g11*g12^2*g20^3*g22*g30*g31*g32^2 - g10*g11*g12^2*g20^3*g22*g31^3*g32
    - 6*g10*g11*g12^2*g20^2*g21^2*g30*g31*g32^2 -
    4*g10*g11*g12^2*g20^2*g21*g22*g30^2*g32^2 +
    5*g10*g11*g12^2*g20^2*g21*g22*g30*g31^2*g32 -
    4*g10*g11*g12^2*g20^2*g22^2*g30^2*g31*g32 +
    2*g10*g11*g12^2*g20^2*g22^2*g30*g31^3 +
    2*g10*g11*g12^2*g20*g21^3*g30^2*g32^2 +
    5*g10*g11*g12^2*g20*g21^2*g22*g30^2*g31*g32 +
    8*g10*g11*g12^2*g20*g21*g22^2*g30^3*g32 -
    6*g10*g11*g12^2*g20*g21*g22^2*g30^2*g31^2 -
    4*g10*g11*g12^2*g20*g22^3*g30^3*g31 - g10*g11*g12^2*g21^3*g22*g30^3*g32 -
    4*g10*g12^3*g20^3*g21*g30*g31*g32^2 - g10*g12^3*g20^3*g21*g31^3*g32 +
    g10*g12^3*g20^3*g22*g31^4 + g10*g12^3*g20^2*g21^2*g30*g31^2*g32 +
    8*g10*g12^3*g20^2*g21*g22*g30^2*g31*g32 - g10*g12^3*g20^2*g21*g22*g30*g31^3
    - g10*g12^3*g20*g21^3*g30^2*g31*g32 + g10*g12^3*g20*g21^2*g22*g30^2*g31^2 -
    4*g10*g12^3*g20*g21*g22^2*g30^3*g31 + g10*g12^3*g21^4*g30^3*g32 -
    g10*g12^3*g21^3*g22*g30^3*g31 + g11^4*g20^3*g22*g30*g32^3 -
    2*g11^4*g20^2*g22^2*g30^2*g32^2 + g11^4*g20*g22^3*g30^3*g32 -
    g11^3*g12*g20^3*g21*g30*g32^3 - g11^3*g12*g20^3*g22*g30*g31*g32^2 +
    2*g11^3*g12*g20^2*g21*g22*g30^2*g32^2 +
    2*g11^3*g12*g20^2*g22^2*g30^2*g31*g32 - g11^3*g12*g20*g21*g22^2*g30^3*g32 -
    g11^3*g12*g20*g22^3*g30^3*g31 + g11^2*g12^2*g20^3*g22*g30*g31^2*g32 +
    2*g11^2*g12^2*g20^2*g21^2*g30^2*g32^2 -
    6*g11^2*g12^2*g20^2*g21*g22*g30^2*g31*g32 +
    2*g11^2*g12^2*g20^2*g22^2*g30^2*g31^2 + g11^2*g12^2*g20*g21^2*g22*g30^3*g32
    + 4*g11*g12^3*g20^3*g21*g30^2*g32^2 + g11*g12^3*g20^3*g21*g30*g31^2*g32 -
    4*g11*g12^3*g20^3*g22*g30^2*g31*g32 - g11*g12^3*g20^3*g22*g30*g31^3 -
    4*g11*g12^3*g20^2*g21*g22*g30^3*g32 + 4*g11*g12^3*g20^2*g22^2*g30^3*g31 -
    g11*g12^3*g20*g21^3*g30^3*g32 +
    g11*g12^3*g20*g21^2*g22*g30^3*g31)/(g10^2*g21^2*g32^2 -
    2*g10^2*g21*g22*g31*g32 + g10^2*g22^2*g31^2 - 2*g10*g11*g20*g21*g32^2 +
    2*g10*g11*g20*g22*g31*g32 + 2*g10*g11*g21*g22*g30*g32 -
    2*g10*g11*g22^2*g30*g31 + 2*g10*g12*g20*g21*g31*g32 -
    2*g10*g12*g20*g22*g31^2 - 2*g10*g12*g21^2*g30*g32 +
    2*g10*g12*g21*g22*g30*g31 + g11^2*g20^2*g32^2 - 2*g11^2*g20*g22*g30*g32 +
    g11^2*g22^2*g30^2 - 2*g11*g12*g20^2*g31*g32 + 2*g11*g12*g20*g21*g30*g32 +
    2*g11*g12*g20*g22*g30*g31 - 2*g11*g12*g21*g22*g30^2 + g12^2*g20^2*g31^2 -
    2*g12^2*g20*g21*g30*g31 + g12^2*g21^2*g30^2)*k2^2 +
    (-4*g10^3*g12*g20*g21^2*g22*g31*g32^3 +
    4*g10^3*g12*g20*g21*g22^2*g31^2*g32^2 +
    4*g10^3*g12*g21^2*g22^2*g30*g31*g32^2 - 4*g10^3*g12*g21*g22^3*g30*g31^2*g32
    + 8*g10^2*g11^2*g20^2*g22^2*g31*g32^3 +
    4*g10^2*g11^2*g20*g21^2*g22*g31*g32^3 -
    8*g10^2*g11^2*g20*g21*g22^2*g30*g32^3 -
    2*g10^2*g11^2*g20*g21*g22^2*g31^2*g32^2 -
    8*g10^2*g11^2*g20*g22^3*g30*g31*g32^2 - 2*g10^2*g11^2*g20*g22^3*g31^3*g32 -
    2*g10^2*g11^2*g21^3*g22*g30*g32^3 - 2*g10^2*g11^2*g21^2*g22^2*g30*g31*g32^2
    + 8*g10^2*g11^2*g21*g22^3*g30^2*g32^2 +
    4*g10^2*g11^2*g21*g22^3*g30*g31^2*g32 -
    8*g10^2*g11*g12*g20^2*g21*g22*g31*g32^3 -
    4*g10^2*g11*g12*g20^2*g22^2*g31^2*g32^2 -
    4*g10^2*g11*g12*g20*g21^3*g31*g32^3 +
    8*g10^2*g11*g12*g20*g21^2*g22*g30*g32^3 -
    4*g10^2*g11*g12*g20*g21^2*g22*g31^2*g32^2 +
    8*g10^2*g11*g12*g20*g21*g22^2*g30*g31*g32^2 +
    6*g10^2*g11*g12*g20*g21*g22^2*g31^3*g32 +
    8*g10^2*g11*g12*g20*g22^3*g30*g31^2*g32 + 2*g10^2*g11*g12*g20*g22^3*g31^4 +
    2*g10^2*g11*g12*g21^4*g30*g32^3 + 6*g10^2*g11*g12*g21^3*g22*g30*g31*g32^2 -
    4*g10^2*g11*g12*g21^2*g22^2*g30^2*g32^2 -
    4*g10^2*g11*g12*g21^2*g22^2*g30*g31^2*g32 -
    8*g10^2*g11*g12*g21*g22^3*g30^2*g31*g32 -
    4*g10^2*g11*g12*g21*g22^3*g30*g31^3 + 8*g10^2*g12^2*g20^2*g21^2*g31*g32^3 -
    4*g10^2*g12^2*g20^2*g21*g22*g31^2*g32^2 +
    6*g10^2*g12^2*g20*g21^3*g31^2*g32^2 -
    4*g10^2*g12^2*g20*g21^2*g22*g30*g31*g32^2 -
    4*g10^2*g12^2*g20*g21^2*g22*g31^3*g32 -
    4*g10^2*g12^2*g20*g21*g22^2*g30*g31^2*g32 -
    2*g10^2*g12^2*g20*g21*g22^2*g31^4 - 2*g10^2*g12^2*g21^4*g30*g31*g32^2 -
    4*g10^2*g12^2*g21^3*g22*g30*g31^2*g32 -
    4*g10^2*g12^2*g21^2*g22^2*g30^2*g31*g32 +
    6*g10^2*g12^2*g21^2*g22^2*g30*g31^3 + 8*g10^2*g12^2*g21*g22^3*g30^2*g31^2 -
    4*g10*g11^3*g20^2*g21*g22*g31*g32^3 + 6*g10*g11^3*g20^2*g22^2*g31^2*g32^2 -
    4*g10*g11^3*g20*g21*g22^2*g30*g31*g32^2 +
    6*g10*g11^3*g21^2*g22^2*g30^2*g32^2 - 4*g10*g11^3*g21*g22^3*g30^2*g31*g32 -
    4*g10*g11^2*g12*g20^3*g22*g31*g32^3 + 4*g10*g11^2*g12*g20^2*g21^2*g31*g32^3
    + 8*g10*g11^2*g12*g20^2*g21*g22*g30*g32^3 -
    4*g10*g11^2*g12*g20^2*g21*g22*g31^2*g32^2 -
    4*g10*g11^2*g12*g20^2*g22^2*g30*g31*g32^2 -
    4*g10*g11^2*g12*g20^2*g22^2*g31^3*g32 +
    4*g10*g11^2*g12*g20*g21^2*g22*g30*g31*g32^2 -
    4*g10*g11^2*g12*g20*g21*g22^2*g30^2*g32^2 +
    4*g10*g11^2*g12*g20*g21*g22^2*g30*g31^2*g32 +
    8*g10*g11^2*g12*g20*g22^3*g30^2*g31*g32 -
    4*g10*g11^2*g12*g21^3*g22*g30^2*g32^2 -
    4*g10*g11^2*g12*g21^2*g22^2*g30^2*g31*g32 -
    4*g10*g11^2*g12*g21*g22^3*g30^3*g32 + 4*g10*g11^2*g12*g21*g22^3*g30^2*g31^2
    + 4*g10*g11*g12^2*g20^3*g22*g31^2*g32^2 -
    8*g10*g11*g12^2*g20^2*g21^2*g30*g32^3 -
    2*g10*g11*g12^2*g20^2*g21^2*g31^2*g32^2 +
    8*g10*g11*g12^2*g20^2*g21*g22*g30*g31*g32^2 +
    6*g10*g11*g12^2*g20^2*g21*g22*g31^3*g32 -
    4*g10*g11*g12^2*g20^2*g22^2*g30*g31^2*g32 -
    2*g10*g11*g12^2*g20^2*g22^2*g31^4 - 4*g10*g11*g12^2*g20*g21^3*g30*g31*g32^2
    - 4*g10*g11*g12^2*g20*g21^2*g22*g30^2*g32^2 +
    4*g10*g11*g12^2*g20*g21^2*g22*g30*g31^2*g32 +
    8*g10*g11*g12^2*g20*g21*g22^2*g30^2*g31*g32 -
    4*g10*g11*g12^2*g20*g21*g22^2*g30*g31^3 -
    8*g10*g11*g12^2*g20*g22^3*g30^2*g31^2 - 2*g10*g11*g12^2*g21^4*g30^2*g32^2 +
    6*g10*g11*g12^2*g21^3*g22*g30^2*g31*g32 +
    4*g10*g11*g12^2*g21^2*g22^2*g30^3*g32 -
    2*g10*g11*g12^2*g21^2*g22^2*g30^2*g31^2 -
    8*g10*g12^3*g20^2*g21^2*g30*g31*g32^2 - 2*g10*g12^3*g20^2*g21^2*g31^3*g32 +
    8*g10*g12^3*g20^2*g21*g22*g30*g31^2*g32 + 2*g10*g12^3*g20^2*g21*g22*g31^4 +
    8*g10*g12^3*g20*g21^2*g22*g30^2*g31*g32 -
    8*g10*g12^3*g20*g21*g22^2*g30^2*g31^2 + 2*g10*g12^3*g21^4*g30^2*g31*g32 -
    2*g10*g12^3*g21^3*g22*g30^2*g31^2 + 2*g11^4*g20^2*g21*g22*g30*g32^3 -
    2*g11^4*g20^2*g22^2*g30*g31*g32^2 - 2*g11^4*g20*g21*g22^2*g30^2*g32^2 +
    2*g11^4*g20*g22^3*g30^2*g31*g32 - 2*g11^3*g12*g20^2*g21^2*g30*g32^3 +
    6*g11^3*g12*g20^2*g21*g22*g30*g31*g32^2 -
    4*g11^3*g12*g20^2*g22^2*g30*g31^2*g32 -
    4*g11^3*g12*g20*g21^2*g22*g30^2*g32^2 +
    6*g11^3*g12*g20*g21*g22^2*g30^2*g31*g32 - 2*g11^3*g12*g20*g22^3*g30^2*g31^2
    + 4*g11^2*g12^2*g20^3*g22*g30*g31*g32^2 -
    2*g11^2*g12^2*g20^2*g21^2*g30*g31*g32^2 -
    4*g11^2*g12^2*g20^2*g21*g22*g30^2*g32^2 -
    4*g11^2*g12^2*g20^2*g21*g22*g30*g31^2*g32 -
    4*g11^2*g12^2*g20^2*g22^2*g30^2*g31*g32 +
    6*g11^2*g12^2*g20^2*g22^2*g30*g31^3 + 6*g11^2*g12^2*g20*g21^3*g30^2*g32^2 -
    4*g11^2*g12^2*g20*g21^2*g22*g30^2*g31*g32 +
    4*g11^2*g12^2*g20*g21*g22^2*g30^3*g32 -
    2*g11^2*g12^2*g20*g21*g22^2*g30^2*g31^2 -
    4*g11*g12^3*g20^3*g22*g30*g31^2*g32 + 8*g11*g12^3*g20^2*g21^2*g30^2*g32^2 +
    4*g11*g12^3*g20^2*g21^2*g30*g31^2*g32 -
    8*g11*g12^3*g20^2*g21*g22*g30^2*g31*g32 -
    4*g11*g12^3*g20^2*g21*g22*g30*g31^3 + 8*g11*g12^3*g20^2*g22^2*g30^2*g31^2 -
    4*g11*g12^3*g20*g21^3*g30^2*g31*g32 - 4*g11*g12^3*g20*g21^2*g22*g30^3*g32 +
    4*g11*g12^3*g20*g21^2*g22*g30^2*g31^2)/(g10^2*g21^2*g32^2 -
    2*g10^2*g21*g22*g31*g32 + g10^2*g22^2*g31^2 - 2*g10*g11*g20*g21*g32^2 +
    2*g10*g11*g20*g22*g31*g32 + 2*g10*g11*g21*g22*g30*g32 -
    2*g10*g11*g22^2*g30*g31 + 2*g10*g12*g20*g21*g31*g32 -
    2*g10*g12*g20*g22*g31^2 - 2*g10*g12*g21^2*g30*g32 +
    2*g10*g12*g21*g22*g30*g31 + g11^2*g20^2*g32^2 - 2*g11^2*g20*g22*g30*g32 +
    g11^2*g22^2*g30^2 - 2*g11*g12*g20^2*g31*g32 + 2*g11*g12*g20*g21*g30*g32 +
    2*g11*g12*g20*g22*g30*g31 - 2*g11*g12*g21*g22*g30^2 + g12^2*g20^2*g31^2 -
    2*g12^2*g20*g21*g30*g31 + g12^2*g21^2*g30^2)*k2*k3 +
    (-2*g10*g11*g20*g22*g31*g32 + 2*g10*g11*g21*g22*g30*g32 +
    2*g10*g12*g20*g21*g31*g32 - 2*g10*g12*g21*g22*g30*g31 -
    2*g11*g12*g20*g21*g30*g32 + 2*g11*g12*g20*g22*g30*g31)/(g10*g21*g32 -
    g10*g22*g31 - g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k2*k4 +
    (-4*g10^3*g11*g20*g21*g22^2*g32^4 + 4*g10^3*g11*g20*g22^3*g31*g32^3 -
    g10^3*g11*g21^3*g22*g32^4 + g10^3*g11*g21^2*g22^2*g31*g32^3 +
    4*g10^3*g11*g21*g22^3*g30*g32^3 + g10^3*g11*g21*g22^3*g31^2*g32^2 -
    4*g10^3*g11*g22^4*g30*g31*g32^2 - g10^3*g11*g22^4*g31^3*g32 +
    g10^3*g12*g21^4*g32^4 - 2*g10^3*g12*g21^3*g22*g31*g32^3 +
    2*g10^3*g12*g21^2*g22^2*g31^2*g32^2 - 2*g10^3*g12*g21*g22^3*g31^3*g32 +
    g10^3*g12*g22^4*g31^4 + 4*g10^2*g11^2*g20^2*g22^2*g32^4 +
    3*g10^2*g11^2*g20*g21^2*g22*g32^4 - 2*g10^2*g11^2*g20*g21*g22^2*g31*g32^3 -
    8*g10^2*g11^2*g20*g22^3*g30*g32^3 - g10^2*g11^2*g20*g22^3*g31^2*g32^2 +
    g10^2*g11^2*g21^3*g22*g31*g32^3 - g10^2*g11^2*g21^2*g22^2*g30*g32^3 -
    2*g10^2*g11^2*g21^2*g22^2*g31^2*g32^2 -
    2*g10^2*g11^2*g21*g22^3*g30*g31*g32^2 + g10^2*g11^2*g21*g22^3*g31^3*g32 +
    4*g10^2*g11^2*g22^4*g30^2*g32^2 + 3*g10^2*g11^2*g22^4*g30*g31^2*g32 -
    4*g10^2*g11*g12*g20^2*g22^2*g31*g32^3 - 3*g10^2*g11*g12*g20*g21^3*g32^4 -
    2*g10^2*g11*g12*g20*g21^2*g22*g31*g32^3 +
    4*g10^2*g11*g12*g20*g21*g22^2*g30*g32^3 +
    g10^2*g11*g12*g20*g21*g22^2*g31^2*g32^2 +
    4*g10^2*g11*g12*g20*g22^3*g30*g31*g32^2 +
    4*g10^2*g11*g12*g20*g22^3*g31^3*g32 - g10^2*g11*g12*g21^4*g31*g32^3 +
    4*g10^2*g11*g12*g21^3*g22*g30*g32^3 + g10^2*g11*g12*g21^3*g22*g31^2*g32^2 +
    g10^2*g11*g12*g21^2*g22^2*g30*g31*g32^2 +
    g10^2*g11*g12*g21^2*g22^2*g31^3*g32 - 4*g10^2*g11*g12*g21*g22^3*g30^2*g32^2
    - 2*g10^2*g11*g12*g21*g22^3*g30*g31^2*g32 - g10^2*g11*g12*g21*g22^3*g31^4 -
    3*g10^2*g11*g12*g22^4*g30*g31^3 + 4*g10^2*g12^2*g20^2*g21^2*g32^4 -
    4*g10^2*g12^2*g20^2*g21*g22*g31*g32^3 + 5*g10^2*g12^2*g20*g21^3*g31*g32^3 -
    3*g10^2*g12^2*g20*g21^2*g22*g31^2*g32^2 -
    g10^2*g12^2*g20*g21*g22^2*g31^3*g32 - g10^2*g12^2*g20*g22^3*g31^4 -
    g10^2*g12^2*g21^4*g30*g32^3 + 2*g10^2*g12^2*g21^4*g31^2*g32^2 -
    g10^2*g12^2*g21^3*g22*g30*g31*g32^2 - 4*g10^2*g12^2*g21^3*g22*g31^3*g32 -
    3*g10^2*g12^2*g21^2*g22^2*g30*g31^2*g32 + 2*g10^2*g12^2*g21^2*g22^2*g31^4 -
    4*g10^2*g12^2*g21*g22^3*g30^2*g31*g32 + 5*g10^2*g12^2*g21*g22^3*g30*g31^3 +
    4*g10^2*g12^2*g22^4*g30^2*g31^2 - 3*g10*g11^3*g20^2*g21*g22*g32^4 +
    5*g10*g11^3*g20^2*g22^2*g31*g32^3 - 2*g10*g11^3*g20*g21*g22^2*g30*g32^3 +
    2*g10*g11^3*g20*g21*g22^2*g31^2*g32^2 - 2*g10*g11^3*g20*g22^3*g30*g31*g32^2
    - 2*g10*g11^3*g20*g22^3*g31^3*g32 - 2*g10*g11^3*g21^3*g22*g30*g32^3 +
    2*g10*g11^3*g21^2*g22^2*g30*g31*g32^2 + 5*g10*g11^3*g21*g22^3*g30^2*g32^2 -
    3*g10*g11^3*g22^4*g30^2*g31*g32 + 3*g10*g11^2*g12*g20^2*g21^2*g32^4 -
    2*g10*g11^2*g12*g20^2*g21*g22*g31*g32^3 -
    3*g10*g11^2*g12*g20^2*g22^2*g31^2*g32^2 -
    6*g10*g11^2*g12*g20*g21^2*g22*g31^2*g32^2 +
    4*g10*g11^2*g12*g20*g21*g22^2*g30*g31*g32^2 +
    4*g10*g11^2*g12*g20*g21*g22^2*g31^3*g32 + 2*g10*g11^2*g12*g20*g22^3*g31^4 +
    2*g10*g11^2*g12*g21^4*g30*g32^3 + 4*g10*g11^2*g12*g21^3*g22*g30*g31*g32^2 -
    3*g10*g11^2*g12*g21^2*g22^2*g30^2*g32^2 -
    6*g10*g11^2*g12*g21^2*g22^2*g30*g31^2*g32 -
    2*g10*g11^2*g12*g21*g22^3*g30^2*g31*g32 + 3*g10*g11^2*g12*g22^4*g30^2*g31^2
    - 4*g10*g11*g12^2*g20^3*g21*g32^4 - 2*g10*g11*g12^2*g20^2*g21^2*g31*g32^3 +
    4*g10*g11*g12^2*g20^2*g21*g22*g30*g32^3 +
    g10*g11*g12^2*g20^2*g21*g22*g31^2*g32^2 -
    g10*g11*g12^2*g20^2*g22^2*g31^3*g32 - 2*g10*g11*g12^2*g20*g21^3*g30*g32^3 +
    2*g10*g11*g12^2*g20*g21^3*g31^2*g32^2 +
    4*g10*g11*g12^2*g20*g21^2*g22*g30*g31*g32^2 +
    4*g10*g11*g12^2*g20*g21^2*g22*g31^3*g32 +
    4*g10*g11*g12^2*g20*g21*g22^2*g30*g31^2*g32 -
    6*g10*g11*g12^2*g20*g21*g22^2*g31^4 +
    4*g10*g11*g12^2*g20*g22^3*g30^2*g31*g32 -
    2*g10*g11*g12^2*g20*g22^3*g30*g31^3 - 6*g10*g11*g12^2*g21^4*g30*g31*g32^2 -
    g10*g11*g12^2*g21^3*g22*g30^2*g32^2 +
    4*g10*g11*g12^2*g21^3*g22*g30*g31^2*g32 +
    g10*g11*g12^2*g21^2*g22^2*g30^2*g31*g32 +
    2*g10*g11*g12^2*g21^2*g22^2*g30*g31^3 -
    2*g10*g11*g12^2*g21*g22^3*g30^2*g31^2 - 4*g10*g11*g12^2*g22^4*g30^3*g31 +
    4*g10*g12^3*g20^3*g21*g31*g32^3 - 8*g10*g12^3*g20^2*g21^2*g30*g32^3 -
    g10*g12^3*g20^2*g21^2*g31^2*g32^2 + 4*g10*g12^3*g20^2*g21*g22*g30*g31*g32^2
    + 4*g10*g12^3*g20^2*g21*g22*g31^3*g32 - g10*g12^3*g20^2*g22^2*g31^4 -
    2*g10*g12^3*g20*g21^3*g30*g31*g32^2 - 2*g10*g12^3*g20*g21^3*g31^3*g32 +
    2*g10*g12^3*g20*g21^2*g22*g31^4 + 4*g10*g12^3*g20*g21*g22^2*g30^2*g31*g32 -
    2*g10*g12^3*g20*g21*g22^2*g30*g31^3 - 8*g10*g12^3*g20*g22^3*g30^2*g31^2 -
    g10*g12^3*g21^4*g30^2*g32^2 + 2*g10*g12^3*g21^4*g30*g31^2*g32 +
    4*g10*g12^3*g21^3*g22*g30^2*g31*g32 - 2*g10*g12^3*g21^3*g22*g30*g31^3 -
    g10*g12^3*g21^2*g22^2*g30^2*g31^2 + 4*g10*g12^3*g21*g22^3*g30^3*g31 +
    g11^4*g20^3*g22*g32^4 - g11^4*g20^2*g21*g22*g31*g32^3 -
    g11^4*g20^2*g22^2*g30*g32^3 + 2*g11^4*g20^2*g22^2*g31^2*g32^2 +
    2*g11^4*g20*g21^2*g22*g30*g32^3 - 6*g11^4*g20*g21*g22^2*g30*g31*g32^2 -
    g11^4*g20*g22^3*g30^2*g32^2 + 2*g11^4*g20*g22^3*g30*g31^2*g32 +
    2*g11^4*g21^2*g22^2*g30^2*g32^2 - g11^4*g21*g22^3*g30^2*g31*g32 +
    g11^4*g22^4*g30^3*g32 - g11^3*g12*g20^3*g21*g32^4 -
    2*g11^3*g12*g20^3*g22*g31*g32^3 + g11^3*g12*g20^2*g21^2*g31*g32^3 +
    4*g11^3*g12*g20^2*g21*g22*g30*g32^3 + g11^3*g12*g20^2*g21*g22*g31^2*g32^2 -
    g11^3*g12*g20^2*g22^2*g30*g31*g32^2 - 4*g11^3*g12*g20^2*g22^2*g31^3*g32 -
    2*g11^3*g12*g20*g21^3*g30*g32^3 + 4*g11^3*g12*g20*g21^2*g22*g30*g31*g32^2 -
    g11^3*g12*g20*g21*g22^2*g30^2*g32^2 +
    4*g11^3*g12*g20*g21*g22^2*g30*g31^2*g32 +
    4*g11^3*g12*g20*g22^3*g30^2*g31*g32 - 2*g11^3*g12*g20*g22^3*g30*g31^3 -
    4*g11^3*g12*g21^3*g22*g30^2*g32^2 + g11^3*g12*g21^2*g22^2*g30^2*g31*g32 -
    2*g11^3*g12*g21*g22^3*g30^3*g32 + g11^3*g12*g21*g22^3*g30^2*g31^2 -
    g11^3*g12*g22^4*g30^3*g31 + g11^2*g12^2*g20^3*g21*g31*g32^3 +
    2*g11^2*g12^2*g20^3*g22*g31^2*g32^2 - g11^2*g12^2*g20^2*g21^2*g30*g32^3 -
    2*g11^2*g12^2*g20^2*g21^2*g31^2*g32^2 +
    g11^2*g12^2*g20^2*g21*g22*g30*g31*g32^2 +
    g11^2*g12^2*g20^2*g21*g22*g31^3*g32 -
    3*g11^2*g12^2*g20^2*g22^2*g30*g31^2*g32 + 2*g11^2*g12^2*g20^2*g22^2*g31^4 +
    2*g11^2*g12^2*g20*g21^3*g30*g31*g32^2 -
    3*g11^2*g12^2*g20*g21^2*g22*g30^2*g32^2 -
    6*g11^2*g12^2*g20*g21^2*g22*g30*g31^2*g32 +
    g11^2*g12^2*g20*g21*g22^2*g30^2*g31*g32 +
    2*g11^2*g12^2*g20*g21*g22^2*g30*g31^3 - g11^2*g12^2*g20*g22^3*g30^2*g31^2 +
    2*g11^2*g12^2*g21^4*g30^2*g32^2 + g11^2*g12^2*g21^3*g22*g30^2*g31*g32 +
    2*g11^2*g12^2*g21^2*g22^2*g30^3*g32 - 2*g11^2*g12^2*g21^2*g22^2*g30^2*g31^2
    + g11^2*g12^2*g21*g22^3*g30^3*g31 + 4*g11*g12^3*g20^3*g21*g30*g32^3 +
    g11*g12^3*g20^3*g21*g31^2*g32^2 - 2*g11*g12^3*g20^3*g22*g31^3*g32 -
    2*g11*g12^3*g20^2*g21^2*g30*g31*g32^2 + g11*g12^3*g20^2*g21^2*g31^3*g32 -
    4*g11*g12^3*g20^2*g21*g22*g30^2*g32^2 -
    2*g11*g12^3*g20^2*g21*g22*g30*g31^2*g32 - g11*g12^3*g20^2*g21*g22*g31^4 -
    4*g11*g12^3*g20^2*g22^2*g30^2*g31*g32 + 5*g11*g12^3*g20^2*g22^2*g30*g31^3 +
    5*g11*g12^3*g20*g21^3*g30^2*g32^2 - 2*g11*g12^3*g20*g21^2*g22*g30^2*g31*g32
    - 2*g11*g12^3*g20*g21*g22^2*g30^2*g31^2 + 4*g11*g12^3*g20*g22^3*g30^3*g31 -
    g11*g12^3*g21^4*g30^2*g31*g32 - 2*g11*g12^3*g21^3*g22*g30^3*g32 +
    g11*g12^3*g21^3*g22*g30^2*g31^2 + g11*g12^3*g21^2*g22^2*g30^3*g31 -
    4*g12^4*g20^3*g21*g30*g31*g32^2 - g12^4*g20^3*g21*g31^3*g32 +
    g12^4*g20^3*g22*g31^4 + 4*g12^4*g20^2*g21^2*g30^2*g32^2 +
    3*g12^4*g20^2*g21^2*g30*g31^2*g32 - 3*g12^4*g20^2*g21*g22*g30*g31^3 +
    4*g12^4*g20^2*g22^2*g30^2*g31^2 - 3*g12^4*g20*g21^3*g30^2*g31*g32 +
    3*g12^4*g20*g21^2*g22*g30^2*g31^2 - 4*g12^4*g20*g21*g22^2*g30^3*g31 +
    g12^4*g21^4*g30^3*g32 - g12^4*g21^3*g22*g30^3*g31)/(g10^2*g21^2*g32^2 -
    2*g10^2*g21*g22*g31*g32 + g10^2*g22^2*g31^2 - 2*g10*g11*g20*g21*g32^2 +
    2*g10*g11*g20*g22*g31*g32 + 2*g10*g11*g21*g22*g30*g32 -
    2*g10*g11*g22^2*g30*g31 + 2*g10*g12*g20*g21*g31*g32 -
    2*g10*g12*g20*g22*g31^2 - 2*g10*g12*g21^2*g30*g32 +
    2*g10*g12*g21*g22*g30*g31 + g11^2*g20^2*g32^2 - 2*g11^2*g20*g22*g30*g32 +
    g11^2*g22^2*g30^2 - 2*g11*g12*g20^2*g31*g32 + 2*g11*g12*g20*g21*g30*g32 +
    2*g11*g12*g20*g22*g30*g31 - 2*g11*g12*g21*g22*g30^2 + g12^2*g20^2*g31^2 -
    2*g12^2*g20*g21*g30*g31 + g12^2*g21^2*g30^2)*k3^2 +
    (-4*g10*g11*g20*g22*g32^2 + 4*g10*g11*g22^2*g30*g32 +
    4*g10*g12*g20*g21*g32^2 + 2*g10*g12*g21^2*g31*g32 - 2*g10*g12*g21*g22*g31^2
    - 4*g10*g12*g22^2*g30*g31 - 2*g11^2*g20*g22*g31*g32 +
    2*g11^2*g21*g22*g30*g32 + 2*g11*g12*g20*g22*g31^2 - 2*g11*g12*g21^2*g30*g32
    - 4*g12^2*g20*g21*g30*g32 + 4*g12^2*g20*g22*g30*g31)/(g10*g21*g32 -
    g10*g22*g31 - g11*g20*g32 + g11*g22*g30 + g12*g20*g31 - g12*g21*g30)*k3*k4 +
    k4^2 ];
    
    // We have to scale the last coordinate by delta so that it satisfies the
    // exact equation of the isogenous curve.
    delta := g10*g21*g32 - g10*g22*g31 - g11*g20*g32 + g11*g22*g30 + g12*g20*g31
        - g12*g21*g30;

    li_scaled := li[1..3] cat [li[4] / delta^2];

    P<x> := PolynomialRing(K);
    splitting := [P!Polynomial(P, [g10,g11,g12]),
                  P!Polynomial(P, [g20,g21,g22]),
                  P!Polynomial(P, [g30,g31,g32])];
    return li_scaled, splitting;;
end intrinsic;


intrinsic RichelotOnKummer(splitting::SeqEnum) -> SeqEnum
    { Computes the Richelot on the Kummer surface as a projective degree 2 map
    for the given splitting. }
    li := RichelotOnKummer();
    _Pk := Universe(li);
    _K := CoefficientRing(_Pk);
    gijs := [Coefficient(splitting[1], i) : i in [0,1,2]] cat
            [Coefficient(splitting[2], i) : i in [0,1,2]] cat
            [Coefficient(splitting[3], i) : i in [0,1,2]];
    
    K := CoefficientRing(Universe(splitting));
    Pk<k1,k2,k3,k4> := PolynomialRing(K, 4);
    return [hom<_Pk->Pk | hom<_K->K | gijs>, k1,k2,k3,k4>(l) : l in li];
end intrinsic;


intrinsic RichelotOnKummerMap(splitting::SeqEnum) -> Map
    { Computes a projective map induced by the Richelot isogeny using the given
    splitting. Returns a map between Kummer surfaces (SrfKum). }
    f := Product(splitting);
    _, fd := ComputeRichelotIsogenousCurveNoDelta(splitting);
    Kum_sch := KummerSurfaceScheme(f);
    Kumd_sch := KummerSurfaceScheme(fd);

    li := RichelotOnKummer(splitting);

    Kum := KummerSurface(f);
    Kumd := KummerSurface(fd);

    richelot_image := function(pt)
        richelot_map := map<Kum_sch->Kumd_sch | li>;

        return Kumd!Eltseq(richelot_map(Kum_sch!Eltseq(pt)));
    end function;

    richelot := map<Kum->Kumd | x :-> richelot_image(x)>;

    return richelot;
end intrinsic;


intrinsic DualRichelotOnKummerMap(splitting::SeqEnum) -> Map
{ Computes RichelotOnKummerMap for the dual splitting. Returns richelot_dual.}

    splittingd := ComputeRichelotIsogenousCurveNoDelta(splitting);
    return RichelotOnKummerMap(splittingd);
end intrinsic;


intrinsic LocalRichelotOnKummerMap(splitting::SeqEnum, p::RngIntElt : precision := 100) -> Map
{ Given a splitting, we compute the Richelot isogeny between the Kummer surfaces over
Qp. }

    f := Product(splitting);
    _, fd := ComputeRichelotIsogenousCurveNoDelta(splitting);
    Kum_sch := KummerSurfaceScheme(f);
    Kumd_sch := KummerSurfaceScheme(fd);

    Qp := pAdicField(p, precision);

    Kum_p := BaseChange(KummerSurface(f), Qp);
    Kumd_p := BaseChange(KummerSurface(fd), Qp);

    polys := RichelotOnKummer(splitting);
    Pk<k1,k2,k3,k4> := PolynomialRing(Qp, 4);
    polys_p := [ Pk!ChangeRing(poly, Qp) : poly in polys];

    richelot_image := function(kum_pt)
        return Kumd_p![Evaluate(poly, Eltseq(kum_pt)) : poly in polys_p];
    end function;

    richelot := map<Kum_p->Kumd_p | x :-> richelot_image(x)>;
    return richelot;
end intrinsic;


intrinsic LocalDualRichelotOnKummerMap(splitting::SeqEnum, p::RngIntElt : precision := 100) -> Map
{ Computes LocalRichelotOnKummerMap for the dual splitting. Returns richelot_dual. }
    splittingd := ComputeRichelotIsogenousCurveNoDelta(splitting);
    return LocalRichelotOnKummerMap(splittingd, p : precision := precision);
end intrinsic;